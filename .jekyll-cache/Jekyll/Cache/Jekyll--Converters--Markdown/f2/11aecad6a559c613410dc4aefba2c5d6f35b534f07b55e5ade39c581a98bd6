I"»<p>√â impressionante a ideia de conseguir manipular os dados de um site de outra pessoa n√£o √© mesmo? Eu adoro isso, logo quando comecei a faculdade de programa√ß√£o fiquei intrigado por n√£o ser a primeira coisa a aprender (que sonho).</p>

<p>Mas vamos direto ao ponto, aqui vamos aplicar o Web Scraping em um site simples e em outro um pouco mais complexo. <strong>Let`s go to code</strong>.</p>

<h4 id="bibliotecas-utilizadas">Bibliotecas utilizadas:</h4>
<ul>
  <li>Cheerio</li>
  <li>@pedroentringer/cheerio-table-parser <strong>(M√°gica kkk)</strong></li>
  <li>Axios</li>
  <li>Puppeteer</li>
</ul>

<h4 id="manipulando-dados-de-um-sitesimples">Manipulando dados de um site¬†simples</h4>
<p>Pra come√ßar vamos criar nosso projeto bem rapidinho</p>

<div>
  <pre data-line=""><code class="language-bash">$ yarn init -y
$ yarn add cheerio axios puppeteer @pedroentringer/cheerio-table-parser</code></pre>
</div>

<p>Isso pode demorar alguns minutinhos para terminar, enquanto isso vamos falar um pouco sobre cada uma dessas depend√™ncias.</p>

<h5 id="axios">Axios</h5>
<p>O Axios √© muuuio usado para fazer requisi√ß√µes HTTP, quando voc√™ quer buscar ou enviar dados para algum site.
Por aqui vamos usar ele para buscar a estrutura do meu proprio blog hehehe</p>

<h5 id="cheerio">Cheerio</h5>
<p>O Cheerio √© uma lib que nos permite manipular a DOM do site com mais facilidade, muito similar com a forma do JQuery.</p>

<h5 id="pedroentringercheerio-table-parser">@pedroentringer/cheerio-table-parser</h5>
<p>Essa √© uma lib que eu mesmo fiz pra resolver uma problema que eu tive recentemente. Ela basicamente recebe qualquer tabela em HTML e converte para JSON, assim fica mais f√°cil de manipular os dados n√©? hehehe</p>

<h5 id="puppeteer">Puppeteer</h5>
<p>O Puppeteer √© incrivel, com ele voc√™ consegue mapear a√ß√µes para que um ‚Äúbot‚Äù replique no site usando um navegador, como se fosse uma pessoa de verdade, <strong>top n√©?</strong></p>

<h5 id="lets-go-to-code">Let‚Äôs go to code</h5>
<p>Depois que tudo tiver instalado certinho, bora come√ßar de uma forma simples.
O desafio vai ser buscar o titulo do primeiro post desse nosso blog aqui.</p>

<p>Pra fazer isso vamos criar nosso primeiro arquivo <strong>index.js</strong> e j√° importar o <em>axios</em> e o <em>cheerio</em> nele</p>

<div>
  <pre data-line=""><code class="language-javascript">const axios = require(&#39;axios&#39;)
const cheerio = require(&#39;cheerio&#39;)</code></pre>
</div>

<p>Show, feito isso j√° podemos usar o axios para fazer uma busca na home do nosso blog, e vamos fazer isso da seguinte forma:</p>
<div>
  <pre data-line=""><code class="language-javascript">const webscraping = async () =&gt; {

  const { data } = await axios.get(&#39;https://pedroentringer.dev&#39;)

  const $ = cheerio.load(data)

  const posts = $(&#39;.post-title a&#39;)

  const firstPost = posts.first()

  console.log(firstPost.text())

  /**
   * Resultado:
   * Manipulando dados de um site com Web¬†Scraping
   */

}
webscraping()</code></pre>
</div>

<p>Simples n√©? Agora vamos complicar um pouco mais.</p>

<h4 id="manipulando-dados-de-um-sitecom-autentica√ß√£o-e-navega√ß√£o">Manipulando dados de um site¬†com autentica√ß√£o e navega√ß√£o</h4>

<p>Amanh√£ eu continuo
init</p>
:ET